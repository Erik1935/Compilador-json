//Por si lanza un error:
//import static jflexp.Tokens.Linea;
//import static jflexp.Tokens.Comillas;
//import static jflexp.Tokens.T_dato;
//import static jflexp.Tokens.Cadena;
//import static jflexp.Tokens.If;
//import static jflexp.Tokens.Else;
//import static jflexp.Tokens.Do;
//import static jflexp.Tokens.While;
//import static jflexp.Tokens.For;
//import static jflexp.Tokens.Igual;
//import static jflexp.Tokens.Suma;
//import static jflexp.Tokens.Resta;
//import static jflexp.Tokens.Multiplicacion;
//import static jflexp.Tokens.Division;
//import static jflexp.Tokens.Op_logico;
//import static jflexp.Tokens.Op_incremento;
//import static jflexp.Tokens.Op_relacional;
//import static jflexp.Tokens.Op_atribucion;
//import static jflexp.Tokens.Op_booleano;
//import static jflexp.Tokens.Parentesis_a;
//import static jflexp.Tokens.Parentesis_c;
//import static jflexp.Tokens.Llave_a;
//import static jflexp.Tokens.Llave_c;
//import static jflexp.Tokens.Corchete_a;
//import static jflexp.Tokens.Corchete_c;
//import static jflexp.Tokens.Main;
//import static jflexp.Tokens.P_coma;
//import static jflexp.Tokens.Identificador;
//import static jflexp.Tokens.Numero;
//import static jflexp.Tokens.ERROR; 
package jflexp;

import java.io.BufferedReader;
import java.io.File;
import static jflexp.Tokens.Identificador;
import java.io.FileNotFoundException;
import static jflexp.Tokens.Numero;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import jflexp.Lexer;
import jflexp.Tokens.*;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

public class Ventana extends javax.swing.JFrame {

    private Acciones acciones;
    RSyntaxTextArea txtEntrada = new RSyntaxTextArea();

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        acciones = new Acciones(txtEntrada, resultado, ruta, expresion,estado);
        rsyntax();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ruta = new javax.swing.JTextArea();
        imprimir = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        expresion = new javax.swing.JTextArea();
        evaluar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultado = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        estado = new javax.swing.JTextArea();
        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));

        ruta.setColumns(20);
        ruta.setRows(5);
        jScrollPane1.setViewportView(ruta);

        imprimir.setText("Abrir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        expresion.setColumns(20);
        expresion.setRows(5);
        jScrollPane2.setViewportView(expresion);

        evaluar.setText("Evaluar");
        evaluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluarActionPerformed(evt);
            }
        });

        resultado.setColumns(20);
        resultado.setRows(5);
        jScrollPane4.setViewportView(resultado);

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        estado.setColumns(20);
        estado.setRows(5);
        jScrollPane5.setViewportView(estado);

        panel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(imprimir)
                        .addGap(18, 18, 18)
                        .addComponent(guardar))
                    .addComponent(evaluar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(imprimir)
                        .addComponent(guardar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(evaluar)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void rsyntax() {
        txtEntrada.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
// 2. Quilar la línea amarilla de la posición del cursor
        txtEntrada.setHighlightCurrentLine(false);
// 3. Inicializar txtEntrada con un mensaje de bienvenida
        RTextScrollPane sp = new RTextScrollPane(txtEntrada);
        panel.add(sp);
    }
    private void evaluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluarActionPerformed
         estado.setText("");
        resultado.setText("");
        acciones.evaluar();
    }//GEN-LAST:event_evaluarActionPerformed

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        // TODO add your handling code here:
        JFileChooser jfile = new JFileChooser();
        jfile.showOpenDialog(this);
        File archivo = jfile.getSelectedFile();
        if (archivo != null) {
            String ruta1 = archivo.getAbsolutePath();
            ruta.setText(ruta1);
            try {
                acciones.cargarContenido();
            } catch (IOException ex) {
            }
        }
    }//GEN-LAST:event_imprimirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        try {
            // TODO add your handling code here:
            acciones.guardarCont();
        } catch (FileNotFoundException ex) {

        }
    }//GEN-LAST:event_guardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Reader lector;
        try {
            lector = new BufferedReader(new FileReader(ruta.getText()));
            Lexer lexer = new Lexer(lector);
            String resultado1 = "";
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado1 += "FIN";
                    resultado.setText(resultado1);
                    return;
                }
                switch (tokens) {
                    case ERROR:
                        resultado1 += "Símbolo no definido\n";
                        resultado.setText(resultado1);
                        break;
                    case Identificador:
                        Numero:
                        Reservadas:
                        resultado1 += lexer.lexeme + ": Es una palabra " + tokens + "\n";
                        resultado.setText(resultado1);
                        break;
                       case Coma_Simple:
                        resultado1 += " <Coma>\t" + lexer.lexeme + "\n";
                        break;
                    case Dos_Puntos:
                        resultado1 += " <Dos Puntos>\t" + lexer.lexeme + "\n";
                        break;
                    default:
                        resultado1 += "Token: " + tokens + "\n";
                        resultado.setText(resultado1);
                        break;
                }
//                resultado.setText("----");
  estado.setText("");
         estado.setText("Analisis realizado correctamente");
            }
          
        } catch (FileNotFoundException ex) {
//            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
//            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);

        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea estado;
    private javax.swing.JButton evaluar;
    private javax.swing.JTextArea expresion;
    private javax.swing.JButton guardar;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel panel;
    private javax.swing.JTextArea resultado;
    private javax.swing.JTextArea ruta;
    // End of variables declaration//GEN-END:variables
}
